{"version":3,"sources":["components/MovieLists.js","components/MovieListHeading.js","components/MovieSearch.js","components/AddToMyMovieList.js","components/RemoveSelectedMovie.js","App.js","reportWebVitals.js","index.js"],"names":["MovieLists","props","MyMovieList","myMovieList","isAdded","movieId","alreadyAdded","myList","map","mylistMovie","imdbID","movies","length","movie","className","src","Poster","alt","Title","onClick","handleMyListClick","isMylist","MovieListHeading","title","MovieSearch","input","setInput","type","placeholder","value","onChange","e","target","AddToMyMovieList","xmlns","width","height","fill","viewBox","fillRule","d","RemoveSelectedMovie","App","useState","setMovies","setMyList","getMovie","useRef","current","a","url","fetch","response","json","responseJson","Search","useEffect","selectedMovies","JSON","parse","localStorage","getItem","saveToLocalStorage","items","setItem","stringify","includes","updatedSelectedMovies","filter","selectedMovie","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.727f2029.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction MovieLists(props) {\r\n  const MyMovieList = props.myMovieList;\r\n\r\n  const isAdded = (movieId) => {\r\n    let alreadyAdded = false;\r\n    props.myList?.map((mylistMovie) => {\r\n      if (mylistMovie.imdbID === movieId) {\r\n        alreadyAdded = true;\r\n        return mylistMovie;\r\n      } else return mylistMovie;\r\n    });\r\n    if (alreadyAdded === false) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.movies.length !== 0 ? (\r\n        props.movies?.map((movie) => (\r\n          <div\r\n            className=\"movieList-container d-flex justify-content-start m-3\"\r\n            key={movie.imdbID}\r\n          >\r\n            <img\r\n              className=\"movie-list-img\"\r\n              src={\r\n                movie.Poster !== \"N/A\"\r\n                  ? movie.Poster\r\n                  : \"https://upload.wikimedia.org/wikipedia/en/thumb/d/db/The_Movies_Coverart.jpg/220px-The_Movies_Coverart.jpg\"\r\n              }\r\n              alt={movie.Title}\r\n            />\r\n\r\n            <div\r\n              className=\"overlay d-flex align-items-center justify-content-center m-3\"\r\n              onClick={() => {\r\n                props.handleMyListClick(movie, isAdded(movie.imdbID));\r\n              }}\r\n            >\r\n              {!props.isMylist ? (\r\n                <MyMovieList isAdded={isAdded(movie.imdbID)} />\r\n              ) : (\r\n                <MyMovieList />\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))\r\n      ) : props.isMylist ? (\r\n        <p className=\"movie-list-hint\">My movie list is Empty</p>\r\n      ) : (\r\n        <p className=\"movie-list-hint\">\r\n          Search for the movie list (example: Avatar)\r\n        </p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieLists;\r\n","import React from \"react\";\r\n\r\nfunction MovieListHeading({ title }) {\r\n  return (\r\n    <div className=\"col\">\r\n      <h2>{title}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieListHeading;\r\n","import React from \"react\";\r\n\r\nfunction MovieSearch({ input, setInput }) {\r\n  return (\r\n    <div className=\"col col-sm-4\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Search\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieSearch;\r\n","import React from \"react\";\r\n\r\nfunction AddToMyMovieList({ isAdded }) {\r\n  return (\r\n    <>\r\n      <span className=\"mr-2\">{isAdded ? \"Added\" : \"Add\"}</span>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        width=\"16\"\r\n        height=\"16\"\r\n        fill=\"red\"\r\n        className=\"bi bi-heart-fill\"\r\n        viewBox=\"0 0 16 16\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\"\r\n        />\r\n      </svg>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddToMyMovieList;\r\n","import React from \"react\";\r\n\r\nfunction RemoveSelectedMovie() {\r\n  return (\r\n    <>\r\n      <span className=\"mr-2\">Remove</span>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RemoveSelectedMovie;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport MovieLists from \"./components/MovieLists\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport MovieListHeading from \"./components/MovieListHeading\";\nimport MovieSearch from \"./components/MovieSearch\";\nimport AddToMyMovieList from \"./components/AddToMyMovieList\";\nimport RemoveSelectedMovie from \"./components/RemoveSelectedMovie\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [myList, setMyList] = useState([]);\n  const getMovie = useRef(() => {});\n  getMovie.current = async () => {\n    const url = `https://www.omdbapi.com/?s=${input}&apikey=40b5ba52`;\n    const response = await fetch(url);\n    const responseJson = await response.json();\n    if (responseJson.Search) {\n      setMovies(responseJson.Search);\n    }\n  };\n  useEffect(() => {\n    const selectedMovies = JSON.parse(localStorage.getItem(\"my-movie-list\"));\n    selectedMovies && setMyList(selectedMovies);\n  }, []);\n\n  useEffect(() => {\n    getMovie.current(input);\n  }, [input]);\n\n  const addToMyList = (movie, isAdded) => {\n    let isAlreadyAdded = myList.includes(movie);\n    if (!isAlreadyAdded && !isAdded) {\n      const updatedSelectedMovies = [...myList, movie];\n      updatedSelectedMovies && setMyList(updatedSelectedMovies);\n      saveToLocalStorage(updatedSelectedMovies);\n    }\n  };\n\n  const saveToLocalStorage = (items) => {\n    localStorage.setItem(\"my-movie-list\", JSON.stringify(items));\n  };\n\n  const removeFromMyList = (movie) => {\n    const updatedSelectedMovies = myList.filter(\n      (selectedMovie) => selectedMovie.imdbID !== movie.imdbID\n    );\n    updatedSelectedMovies && setMyList(updatedSelectedMovies);\n    saveToLocalStorage(updatedSelectedMovies);\n  };\n\n  return (\n    <div className=\"container-fluid app\">\n      <h1>Movie Search-Select application</h1>\n      <div className=\"row d-flex mt-4 mb-4 align-items-center\">\n        <MovieListHeading title=\"Movies\" />\n        <MovieSearch input={input} setInput={setInput} />\n      </div>\n\n      <div className=\"row\">\n        <MovieLists\n          movies={movies}\n          myMovieList={AddToMyMovieList}\n          handleMyListClick={addToMyList}\n          isMylist={false}\n          myList={myList}\n        />\n      </div>\n\n      <div className=\"row d-flex mt-4 mb-4 align-items-center\">\n        <MovieListHeading title=\"My Movie List\" />\n      </div>\n      <div className=\"row\">\n        <MovieLists\n          movies={myList}\n          myMovieList={RemoveSelectedMovie}\n          handleMyListClick={removeFromMyList}\n          isMylist={true}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}